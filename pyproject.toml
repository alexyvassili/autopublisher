[tool.poetry]
name = "autopublisher"
version = "3.1.0"
description = "Script for automatic publish news and updates from email to drupal site"
authors = ["Alexey <escantor@gmail.com>"]
classifiers = [
    "Intended Audience :: Developers",
    "Natural Language :: Russian",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
]
license = "MIT"
readme = "README.md"
packages = [
  {include = "autopublisher"}
]
include = ["autopublisher/version.py"]

[tool.poetry.dependencies]
python = "~3.11"
# apiai==1.2.3
aiomisc = "^17.0"
beautifulsoup4 = "~4.12"
ConfigArgParse = "^1.7"
EasyProcess = "~1.1"
fabric3 = "^1.14.post1"
html2text = "2020.1.16"
mammoth = "~1.6"
Pillow = "~10.2"
python-dateutil = "~2.8"
python-magic = "~0.4.27"
python-telegram-bot = "12.8"
PyVirtualDisplay = "3.0"
razdel = "~0.5"
requests = "~2.31"
selenium = "~=4.9.0"
setproctitle = "^1.3"
yarl = "~=1.9"

[tool.poetry.group.dev.dependencies]
aiomisc-pytest = "^1.1.1"
black = "^24.1.1"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
ruff = "^0.1.14"

[tool.poem-plugins.version]
provider = "git"
update_pyproject = true

[tool.poem-plugins.version.git]
format = "long"

[tool.poetry.scripts]
autopublisher = "autopublisher.__main__:main"

[tool.mypy]
allow_subclassing_any = true
allow_untyped_calls = true
allow_untyped_decorators = true
ignore_missing_imports = true
implicit_reexport = true
pretty = true
show_error_codes = true
strict = true
warn_return_any = false

[tool.pytest.ini_options]
python_files = "test_*"
python_functions = "test_*"
python_classes = "TestSuite*"
addopts = "-p no:cacheprovider"

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["autopublisher"]

[build-system]
requires = ["poetry-core>=1.8.1"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    "autopublisher/handlers",
    "autopublisher/mail",
    "autopublisher/publish",
    "autopublisher/services",
    "autopublisher/telegrambot.py",
    "autopublisher/utils",
    "fabfile.py",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101",  # "Missing type annotation for `self` in method"
    "ANN401",  # "Dynamically typed expressions (typing.Any) are disallowed in `value`"
    "RUF001",  # "String contains ambiguous letter"
    "RUF003",  # "Comment contains ambiguous letter"
#    "C408",  # "Unnecessary `dict` call (rewrite as a literal)"
#    "COM812",  # "Trailing comma missing"
    "D",  # docstrings
    "EM101",  # "Exception must not use a string literal, assign to variable first"
#    "FIX002",  # "Line contains TO-DO, consider resolving the issue"
#    "PLR0913",  # "Too many arguments in function definition"
#    "S101",  # "Use of `assert` detected" - it's an anti-bug measure
    "TD002",  # "Missing author in TO-DO"
    "TD003",  # "Missing issue link on the line following this TO-DO"
    "TRY003",  # "Avoid specifying long messages outside the exception class"
#    "UP034"  # "Avoid extraneous parentheses" - I (v-solomatin@) like them as they make the code more explicit
]

# This is select from service-template
#select = [
#  "BLE",
#  "C90",
#  "E",
#  "F",
#  "G",
#  "I",
#  "ICN",
#  "ISC",
#  "PLE",
#  "Q",
#  "RUF006",
#  "RUF100",
#  "T10",
#  "T20",
#  "TID",
#  "UP",
#  "W",
#]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
